generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id_empresa   Int           @id @default(autoincrement())
  nome_empresa String        @db.VarChar(100)
  cnpj         String        @unique @db.VarChar(18)
  endereco     String
  telefone     String?       @db.VarChar(15)
  email        String?       @unique @db.VarChar(100)
  senha        String
  funcionarios Funcionario[]
  produtos     Produto[]
}

model Funcionario {
  id_funcionario   Int             @id @default(autoincrement())
  nome_funcionario String          @db.VarChar(100)
  cargo            String?         @db.VarChar(50)
  email            String          @unique @db.VarChar(100)
  senha            String
  id_empresa       Int
  empresa          Empresa         @relation(fields: [id_empresa], references: [id_empresa], onDelete: Cascade)
  movimentacoes    Movimentacoes[]
}

model Produto {
  id_produto    Int             @id @default(autoincrement())
  nome_produto  String          @db.VarChar(100)
  categoria     String?         @db.VarChar(50)
  quantidade    Int             @default(0)
  preco         Decimal?        @db.Decimal(10, 2)
  id_empresa    Int
  movimentacoes Movimentacoes[]
  empresa       Empresa         @relation(fields: [id_empresa], references: [id_empresa], onDelete: Cascade)
}

model Movimentacoes {
  id_movimentacao   Int         @id @default(autoincrement())
  tipo_movimentacao String      @db.VarChar(10)
  quantidade        Int
  data_movimentacao DateTime    @default(now())
  id_funcionario    Int
  id_produto        Int
  funcionario       Funcionario @relation(fields: [id_funcionario], references: [id_funcionario], onDelete: Cascade)
  produto           Produto     @relation(fields: [id_produto], references: [id_produto], onDelete: Cascade)
}
